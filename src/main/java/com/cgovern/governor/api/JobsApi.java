/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cgovern.governor.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.cgovern.governor.models.BadRequest;
import com.cgovern.governor.models.Job;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-22T04:22:26.530Z")

@Api(value = "projects", description = "the projects API")
public interface JobsApi {

	@ApiOperation(value = "Create New Job", nickname = "addJob", notes = "", response = Job.class, tags = { "job", })
	@ApiResponses(value = { @ApiResponse(code = 201, message = "Created", response = Job.class),
			@ApiResponse(code = 400, message = "Bad Request", response = BadRequest.class),
			@ApiResponse(code = 409, message = "Conflict") })
	@RequestMapping(value = "/stages/{stageId}/jobs", produces = { "application/json" }, consumes = {
			"application/json" }, method = RequestMethod.POST)
	ResponseEntity<Job> addJob(@ApiParam(value = "", required = true) @PathVariable("stageId") String stageId,
			@ApiParam(value = "Job object", required = true) @Valid @RequestBody Job body);

	@ApiOperation(value = "Delete existing Job", nickname = "deleteJobById", notes = "", response = Job.class, tags = {
			"job", })
	@ApiResponses(value = { @ApiResponse(code = 204, message = "No Content", response = Job.class),
			@ApiResponse(code = 404, message = "Not Found") })
	@RequestMapping(value = "/stages/{stageId}/jobs/{jobId}", method = RequestMethod.DELETE)
	ResponseEntity<Job> deleteJobById(

			@ApiParam(value = "", required = true) @PathVariable("stageId") String stageId,
			@ApiParam(value = "", required = true) @PathVariable("jobId") String jobId);

	@ApiOperation(value = "Retrieve Existing Job", nickname = "getJobById", notes = "", response = Job.class, tags = {
			"job", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "OK", response = Job.class),
			@ApiResponse(code = 404, message = "Not Found") })
	@RequestMapping(value = "/stages/{stageId}/jobs/{jobId}", method = RequestMethod.GET)
	ResponseEntity<Job> getJobById(@ApiParam(value = "", required = true) @PathVariable("stageId") String stageId,
			@ApiParam(value = "", required = true) @PathVariable("jobId") String jobId);

	@ApiOperation(value = "Retrieve All Jobs", nickname = "getJobs", notes = "", response = Job.class, responseContainer = "List", tags = {
			"job", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "OK", response = Job.class, responseContainer = "List") })
	@RequestMapping(value = "/projects/{projectId}/plans/{planId}/stages/{stageId}/jobs", method = RequestMethod.GET)
	ResponseEntity<List<Job>> getJobs(@ApiParam(value = "", required = true) @PathVariable("stageId") String stageId);

	@ApiOperation(value = "Update existing job", nickname = "updateJobById", notes = "", response = Job.class, tags = {
			"job", })
	@ApiResponses(value = { @ApiResponse(code = 204, message = "No Content", response = Job.class),
			@ApiResponse(code = 400, message = "Bad Request", response = BadRequest.class),
			@ApiResponse(code = 404, message = "Not Found") })
	@RequestMapping(value = "/stages/{stageId}/jobs/{jobId}", method = RequestMethod.PUT)
	ResponseEntity<Job> updateJobById(@ApiParam(value = "", required = true) @PathVariable("stageId") String stageId,
			@ApiParam(value = "", required = true) @PathVariable("jobId") String jobId,
			@ApiParam(value = "Job object", required = true) @Valid @RequestBody Job body);

}
